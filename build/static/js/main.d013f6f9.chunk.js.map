{"version":3,"sources":["Components/AppContext.js","Components/Navigation/LoginRestaurantForm.js","Components/Navigation/LoginUserForm.js","Components/Navigation/LoginUserMenu.js","Components/Navigation/UserLogout.js","Components/Navigation/LoginMenu.js","Components/Header.js","Pages/Home.js","Pages/AboutPage.js","Pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","CloseLoginMenu","LoginRestaurantForm","loginParam","setShowUserMenu","useContext","setLoginUser","useForm","register","handleSubmit","errors","className","onSubmit","data","Type","FirstName","LastName","RestaurantName","console","log","id","type","placeholder","name","ref","required","onClick","LoginUserForm","LoginUserMenu","React","useState","openTab","setOpenTab","role","e","preventDefault","data-toggle","href","UserLogout","userName","loginUser","LoginMenu","showUserMenu","wrapperRef","useRef","closeMenuValue","useMemo","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","userMenuTransition","useTransition","from","opacity","transform","enter","leave","map","item","key","props","div","style","Provider","value","Header","src","alt","Home","AboutPage","Main","exact","path","component","App","loginUserValue","backgroundImage","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d013f6f9.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\nexport const CloseLoginMenu = createContext(false);\r\n","import React, { useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { CloseLoginMenu, AppContext } from \"../AppContext\";\r\n\r\nexport default function LoginRestaurantForm() {\r\n  const { setShowUserMenu } = useContext(CloseLoginMenu);\r\n  const { setLoginUser } = useContext(AppContext);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let loginParam;\r\n  const onSubmit = (data) => {\r\n    loginParam = {\r\n      Type: \"Restaurant\",\r\n      FirstName: null,\r\n      LastName: null,\r\n      RestaurantName: data.RestaurantName,\r\n    };\r\n    setLoginUser(loginParam);\r\n    setShowUserMenu(false);\r\n    console.log(loginParam);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        className=\"bg-white rounded px-4 pt-6 pb-3 mb-2\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className=\"flex flex-wrap -mx-3 mb-2\">\r\n          <div className=\"w-full px-3 mb-6 md:mb-0\">\r\n            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\r\n              Restaurant Name\r\n            </label>\r\n            <input\r\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n              id=\"grid-first-name\"\r\n              type=\"text\"\r\n              placeholder=\"The Garden of Eat'n\"\r\n              name=\"RestaurantName\"\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.RestaurantName && <span>This field is required</span>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <input\r\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\r\n            type=\"submit\"\r\n          />\r\n          <button\r\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\r\n            type=\"button\"\r\n            onClick={() => setShowUserMenu(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { CloseLoginMenu, AppContext } from \"../AppContext\";\r\n\r\nexport default function LoginUserForm() {\r\n  const { setShowUserMenu } = useContext(CloseLoginMenu);\r\n  const { setLoginUser } = useContext(AppContext);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let loginParam;\r\n  const onSubmit = (data) => {\r\n    loginParam = {\r\n      Type: \"User\",\r\n      FirstName: data.FirstName,\r\n      LastName: data.LastName,\r\n      RestaurantName: null,\r\n    };\r\n    setLoginUser(loginParam);\r\n    setShowUserMenu(false);\r\n    console.log(loginParam);\r\n  };\r\n  return (\r\n    <div>\r\n      <form\r\n        className=\"bg-white rounded px-4 pt-6 pb-3 mb-2\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className=\"flex flex-wrap -mx-3 mb-2\">\r\n          <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\r\n            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\r\n              First Name\r\n            </label>\r\n            <input\r\n              name=\"FirstName\"\r\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n              id=\"grid-first-name\"\r\n              type=\"text\"\r\n              placeholder=\"Jane\"\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.FirstName && <span>This field is required</span>}\r\n          </div>\r\n          <div className=\"w-full md:w-1/2 px-3\">\r\n            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\r\n              Last Name\r\n            </label>\r\n            <input\r\n              name=\"LastName\"\r\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n              id=\"grid-last-name\"\r\n              type=\"text\"\r\n              placeholder=\"Doe\"\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.LastName && <span>This field is required</span>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <input\r\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\r\n            type=\"submit\"\r\n          />\r\n\r\n          <button\r\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\r\n            type=\"button\"\r\n            onClick={() => setShowUserMenu(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoginRestaurantForm from \"./LoginRestaurantForm\";\r\nimport LoginUserForm from \"./LoginUserForm\";\r\n\r\nfunction LoginUserMenu() {\r\n  const [openTab, setOpenTab] = React.useState(1);\r\n  return (\r\n    <div>\r\n      <ul\r\n        className=\"flex mb-0 list-none flex-wrap pt-3 pb-4 flex-row\"\r\n        role=\"tablist\"\r\n      >\r\n        <li className=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\r\n          <a\r\n            className={\r\n              \"text-xs font-bold uppercase px-5 py-3 shadow-lg rounded block leading-normal \" +\r\n              (openTab === 1\r\n                ? \"text-white bg-teal-600\"\r\n                : \"text-teal-600 bg-white\")\r\n            }\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setOpenTab(1);\r\n            }}\r\n            data-toggle=\"tab\"\r\n            href=\"#link1\"\r\n            role=\"tablist\"\r\n          >\r\n            User Login\r\n          </a>\r\n        </li>\r\n        <li className=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\r\n          <a\r\n            className={\r\n              \"text-xs font-bold uppercase px-5 py-3 shadow-lg rounded block leading-normal \" +\r\n              (openTab === 2\r\n                ? \"text-white bg-teal-600\"\r\n                : \"text-teal-600 bg-white\")\r\n            }\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setOpenTab(2);\r\n            }}\r\n            data-toggle=\"tab\"\r\n            href=\"#link2\"\r\n            role=\"tablist\"\r\n          >\r\n            Restaurant Login\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className={openTab === 1 ? \"block\" : \"hidden\"} id=\"link1\">\r\n        <LoginUserForm />\r\n      </div>\r\n      <div className={openTab === 2 ? \"block\" : \"hidden\"} id=\"link2\">\r\n        <LoginRestaurantForm />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginUserMenu;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nexport default function UserLogout() {\r\n  const { loginUser, setLoginUser } = useContext(AppContext);\r\n  let userName;\r\n  switch (loginUser.Type) {\r\n    case \"User\":\r\n      userName = loginUser.FirstName + \" \" + loginUser.LastName;\r\n      break;\r\n    case \"Restaurant\":\r\n      userName = loginUser.RestaurantName;\r\n      break;\r\n    default:\r\n      setLoginUser(null);\r\n  }\r\n  return (\r\n    <div className=\"flex flex-no-wrap\">\r\n      <p className=\"mr-2\">Welcome {userName}</p>\r\n      <p\r\n        className=\"no-underline hover:underline text-indigo-700 cursor-pointer mr-10\"\r\n        onClick={() => setLoginUser(null)}\r\n      >\r\n        Logout\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect, useMemo, useContext } from \"react\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport LoginUserMenu from \"./LoginUserMenu\";\r\nimport { AppContext, CloseLoginMenu } from \"../AppContext\";\r\nimport UserLogout from \"./UserLogout\";\r\n\r\nfunction LoginMenu() {\r\n  const { loginUser } = useContext(AppContext);\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const wrapperRef = useRef(null);\r\n  const closeMenuValue = useMemo(() => ({ showUserMenu, setShowUserMenu }), [\r\n    showUserMenu,\r\n    setShowUserMenu,\r\n  ]);\r\n\r\n  //Handle clicking outside menu to close it.\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setShowUserMenu(false);\r\n    }\r\n  };\r\n\r\n  //Creating transition effects for user and restaurant login\r\n  const userMenuTransition = useTransition(showUserMenu, null, {\r\n    from: { opacity: 0, transform: \"translateY(-100%)\" },\r\n    enter: { opacity: 1, transform: \"translateY(0)\" },\r\n    leave: { opacity: 0, transform: \"translateY(-100%)\" },\r\n  });\r\n\r\n  return (\r\n    <div ref={wrapperRef}>\r\n      {loginUser ? (\r\n        <UserLogout />\r\n      ) : (\r\n        <button\r\n          className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-0 px-2 rounded mr-10\"\r\n          type=\"button\"\r\n          onClick={() => setShowUserMenu(!showUserMenu)}\r\n        >\r\n          LOGIN\r\n        </button>\r\n      )}\r\n\r\n      {userMenuTransition.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <animated.div\r\n              key={key}\r\n              style={props}\r\n              className=\"fixed bg-white top-0 right-0 z-50 shadow p-1 \"\r\n            >\r\n              <CloseLoginMenu.Provider value={closeMenuValue}>\r\n                <LoginUserMenu />\r\n              </CloseLoginMenu.Provider>\r\n            </animated.div>\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginMenu;\r\n","import React from \"react\";\r\nimport LoginMenu from \"./Navigation/LoginMenu\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"borber-b p-2 flex justify-between items-stretch text-white bg-black h-10\">\r\n      <div className=\"flex flex-no-wrap font-bold\">\r\n        <img className=\"h-8 w-9 mr-5\" src=\"logoicon.png\" alt=\"Logo\"></img>\r\n        RESERVE TO DINE\r\n      </div>\r\n      <div className=\"flex flex-no-wrap\">\r\n        <LoginMenu />\r\n      </div>\r\n      <div className=\"flex ml-10 p-10\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"\">\r\n      <h1>Hello, welcome to our group project page!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction AboutPage() {\r\n  return <h1>This page is created for Human Computer Interfaces</h1>;\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport AboutPage from \"./AboutPage\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/about\" component={AboutPage} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { AppContext } from \"./Components/AppContext\";\r\nimport Header from \"./Components/Header\";\r\nimport Main from \"./Pages/Main\";\r\n\r\nfunction App() {\r\n  const [loginUser, setLoginUser] = useState(null);\r\n\r\n  const loginUserValue = useMemo(() => ({ loginUser, setLoginUser }), [\r\n    loginUser,\r\n    setLoginUser,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-scroll bg-no-repeat bg-cover bg-center w-screen h-screen\"\r\n      style={{\r\n        backgroundImage: \"url('bgimg.jpg')\",\r\n      }}\r\n    >\r\n      <AppContext.Provider value={loginUserValue}>\r\n        <Header />\r\n        <Main />\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./tailwind.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}